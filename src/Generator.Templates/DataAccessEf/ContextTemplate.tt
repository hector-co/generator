<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Generator.Templates.Domain" #>
<#@ import namespace="Generator.Templates.DataAccessEf" #>
using Microsoft.EntityFrameworkCore;
<#    foreach(var model in _module.Model.Values.Where(m => m.IsRoot))
    { #>
using <#= _module.GetDataAccessModelNamespace(model) #>;
<#    } #>

namespace <#= _module.GetDataAccessNamespace() #>
{
    public class <#= _module.GetContextName() #> : DbContext
    {
        public const string DbSchema = "<#= _module.Settings.DatabaseSchema #>";

        public <#= _module.GetContextName() #>(DbContextOptions<<#= _module.GetContextName() #>> options) : base(options)
        {
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            Configure(modelBuilder);
        }

        public static void Configure(ModelBuilder modelBuilder, string dbSchema = DbSchema)
        {
<#    foreach(var model in _module.Model.Values.Where(m => m.IsEntity))
    { #>
            modelBuilder.ApplyConfiguration(new <#= model.Name #>Configuration(dbSchema));
<#    } #>
        }
    }
}