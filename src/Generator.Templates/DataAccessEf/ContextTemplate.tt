<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Generator.Templates.Domain" #>
<#@ import namespace="Generator.Templates.DataAccessEf" #>
using Microsoft.EntityFrameworkCore;
<#    foreach(var model in _module.Model.Values.Where(m => m.IsRoot && !m.IsAbstract))
    { #>
using <#= _module.GetDataAccessModelNamespace(model) #>;
<#    } #>

namespace <#= _module.GetDataAccessNamespace() #>;

public class <#= _module.GetContextName() #> : DbContext, IDbContext
{
    public const string DbSchema = "<#= _module.Settings.DatabaseSchema #>";

    public <#= _module.GetContextName() #>(DbContextOptions<<#= _module.GetContextName() #>> options) : base(options)
    {
    }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        Configure(modelBuilder);
    }

    public static void Configure(ModelBuilder modelBuilder, string dbSchema = DbSchema)
    {
<#    foreach(var model in _module.Model.Values.Where(m => m.IsEntity && !m.IsAbstract))
{ #>
        modelBuilder.ApplyConfiguration(new <#= model.Name #>Configuration(dbSchema));
<#    } #>
    }

    public async Task MigrateAsync(CancellationToken cancellationToken = default)
    {
        await Database.MigrateAsync(cancellationToken);
    }
}