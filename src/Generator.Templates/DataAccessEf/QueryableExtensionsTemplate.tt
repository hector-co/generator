<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Generator.Templates.Domain" #>
using Microsoft.EntityFrameworkCore;
using System.Collections.Generic;
using System.Linq;
using <#= _namespace.GetDomainModelNamespace() #>;

namespace <#= _modelDefinition.GetDataAccessModelNamespace(_namespace) #>
{
    internal static class <#= _modelDefinition.Name #>QueryableExtensions
    {
<#    if (RequiresIncludes(_modelDefinition))
    { #>
        internal static IQueryable<<#= _modelDefinition.Name #>> AddIncludes
            (this IQueryable<<#= _modelDefinition.Name #>> queryable)
        {
            return queryable
<#        foreach (var propName in GetRelatedEntitiesPropertyNames(_modelDefinition))
        { #>
                .Include(m => m.<#= propName #>)
<#        } #>
                ;
        }
<#    } #>
    }
}