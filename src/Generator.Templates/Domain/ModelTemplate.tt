<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Generator.Metadata" #>
<#  if (_model.IsEntity && _module.Settings.EntityUsings.Any()) 
    { #>
<#      foreach (var @using in _module.Settings.EntityUsings) 
        { #>
using <#= @using #>;
<#      } #>

<# } #>
namespace <#= _module.GetDomainModelNamespace() #>;

public <#= _model.IsAbstract? "abstract " : "" #>partial class <#= _model.Name #> <#= GetBaseClassName(_model, _module) #>
{
<# if (HasPropertiesForInit(_model))
{ #>
    public <#= _model.Name #>()
    {
<#      foreach(var propInfo in GetPropertiesForInitInfo(_model))
    { #>
        <#= propInfo.Name #> = new <#= propInfo.TypeName #>();
<#      } #>
    }

<# } #>
<#  if (_model.IsEntity && _module.Settings.GenerateIdProperties && !_model.IsChildClass)
{ #>
    public <#= _model.IdentifierProperty.TypeName #> <#= _model.IdentifierProperty.Name #> { get; set; }
<#  } #>
<#  foreach(var propInfo in GetPropertiesInfo(_model))
{ #>
    <#= propInfo.Visibility #> <#= propInfo.TypeName #> <#= propInfo.Name #> { get; set; }
<#  } #>
}
